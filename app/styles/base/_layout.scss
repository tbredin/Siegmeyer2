// grid classes
// this file is heavy on sass compile time (adds approx 6.5s!!!)
@each $break in $breaks {
    $bp-name: "xs";
    @if $break == break-1 {
        $bp-name: "sm";
    } @else if $break == break-2 {
        $bp-name: "md";
    } @else if $break == break-3 {
        $bp-name: "lg";
    }

    @for $i from 1 through break-get($break, cols) {
        .grid-#{$bp-name}-#{$i} {
            @if $break == break-0 {
                @include span($i);
                // nested grids
                @for $j from 1 through $i {
                    .grid-#{$bp-name}-#{$j} {
                        width: span($j of $i);
                    }

                    .push-#{$bp-name}-#{$j} {
                        margin-left: span($j of $i);
                    }

                    .pull-#{$bp-name}-#{$j} {
                        margin-right: -1 * span($j of $i);
                    }
                }
            } @else {
                @include breakpoint-layout($break) {
                    @include span($i);
                    // nested grids
                    @for $j from 1 through $i {
                        .grid-#{$bp-name}-#{$j} {
                            width: span($j of $i);
                        }

                        .push-#{$bp-name}-#{$j} {
                            margin-left: span($j of $i);
                        }

                        .pull-#{$bp-name}-#{$j} {
                            margin-right: -1 * span($j of $i);
                        }
                    }
                }
            }
        }

        // push classes apply a positive margin to the left
        .push-#{$bp-name}-#{$i} {
            @if $break == break-0 {
                margin-left: span($i);
            } @else {
                @include breakpoint-layout($break) {
                    margin-left: span($i);
                }
            }
        }

        // pull classes apply a negative margin to the right
        // useful for right-floated elements or lock classes
        .pull-#{$bp-name}-#{$i} {
            @if $break == break-0 {
                margin-right: -1 * span($i);
            } @else {
                @include breakpoint-layout($break) {
                    margin-right: -1 * span($i);
                }
            }
        }
    }

    // lock classes float an item to one side and pull following content up to same level
    .lock-#{$bp-name}-left {
        @if $break == break-0 {
            float: left !important;
            margin-bottom: -1000%;
        } @else {
            @include breakpoint-layout($break) {
                float: left !important;
                margin-bottom: -1000%;
            }
        }
    }
    .lock-#{$bp-name}-right {
        @if $break == break-0 {
            float: right !important;
            margin-bottom: -1000%;
        } @else {
            @include breakpoint-layout($break) {
                float: right !important;
                margin-bottom: -1000%;
            }
        }
    }

    // stack classes employ flexbox to reorder the flow an item. Modern enhancement only
    .stack-#{$bp-name}-start {
        @if $break == break-0 {
            order: -1;
        } @else {
            @include breakpoint-layout($break) {
                order: -1;
            }
        }
    }
    .stack-#{$bp-name}-normal {
        @if $break == break-0 {
            order: 0;
        } @else {
            @include breakpoint-layout($break) {
                order: 0;
            }
        }
    }
    .stack-#{$bp-name}-end {
        @if $break == break-0 {
            order: 1;
        } @else {
            @include breakpoint-layout($break) {
                order: 1;
            }
        }
    }

    // required on parent to allow stack reordering
    .stack-#{$bp-name}-on {
        @if $break == break-0 {
            display: flex;
            flex-direction: column;
        } @else {
            @include breakpoint-layout($break) {
                display: flex;
                flex-direction: column;
            }
        }
    }

    // cancel stack reording
    .stack-#{$bp-name}-off {
        @if $break == break-0 {
            display: block;
        } @else {
            @include breakpoint-layout($break) {
                display: block;
            }
        }
    }
}

@mixin lock-reset {
    float: none !important;
    margin-bottom: 0;
}

